name: Link Checker

on:
  schedule:
    # Run weekly on Sundays at 1 AM UTC
    - cron: '0 1 * * 0'
  workflow_dispatch:
    inputs:
      check_external:
        description: 'Check external links'
        required: false
        default: 'true'
        type: boolean
      fail_on_error:
        description: 'Fail workflow on broken links'
        required: false
        default: 'false'
        type: boolean

jobs:
  link-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true
          
      - name: Build Jekyll site
        run: |
          bundle exec jekyll build
          
      - name: Install lychee
        run: |
          wget -qO- https://github.com/lycheeverse/lychee/releases/latest/download/lychee-x86_64-unknown-linux-gnu.tar.gz | tar -xzv
          sudo mv lychee /usr/local/bin/
          
      # Use shared lychee configuration file
          
      - name: Check internal links
        run: |
          echo "🔍 Checking internal links..."
          
          # Check internal links in built site
          lychee --config .lycherc.toml \
            --exclude-all-private \
            --no-progress \
            --offline \
            _site/ || {
            echo "❌ Internal link check failed"
            if [ "${{ github.event.inputs.fail_on_error }}" = "true" ]; then
              exit 1
            fi
          }
          
          echo "✅ Internal link check completed"
          
      - name: Check external links
        if: github.event.inputs.check_external != 'false'
        run: |
          echo "🌐 Checking external links..."
          
          # Create results directory
          mkdir -p link-check-results
          
          # Check external links with detailed reporting
          lychee --config .lycherc.toml \
            --no-progress \
            --format json \
            --output link-check-results/external-links.json \
            manuals/ llms.txt _site/ || {
            echo "❌ Some external links are broken"
            
            # Generate human-readable report
            echo "## 🔗 Broken External Links Report" > link-check-results/report.md
            echo "" >> link-check-results/report.md
            echo "The following external links were found to be broken:" >> link-check-results/report.md
            echo "" >> link-check-results/report.md
            
            # Parse JSON results for broken links using jq
            if [ -f "link-check-results/external-links.json" ]; then
              # Install jq for JSON parsing
              sudo apt-get update && sudo apt-get install -y jq
              
              # Extract broken links from JSON using jq
              jq -r '.links[] | select(.status.status != "Ok") | .url' \
                link-check-results/external-links.json | sort -u \
                >> link-check-results/broken-links.txt || true
              
              if [ -s "link-check-results/broken-links.txt" ]; then
                echo "### Broken Links:" >> link-check-results/report.md
                while read -r link; do
                  echo "- $link" >> link-check-results/report.md
                done < link-check-results/broken-links.txt
              fi
            fi
            
            # Show report
            if [ -f "link-check-results/report.md" ]; then
              cat link-check-results/report.md
            fi
            
            if [ "${{ github.event.inputs.fail_on_error }}" = "true" ]; then
              exit 1
            fi
          }
          
          echo "✅ External link check completed"
          
      - name: Upload link check results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: link-check-results
          path: link-check-results/
          retention-days: 30
          
      - name: Create issue for broken links
        if: always() && github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          script: |
            // Check if there's already an open issue for broken links
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['documentation', 'broken-links']
            });
            
            if (issues.length === 0) {
              // Create new issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: '🔗 Broken links detected in documentation',
                body: `
            ## Broken Links Detected
            
            The scheduled link checker has detected broken links in the documentation.
            
            **Workflow run**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            **Date**: ${new Date().toISOString()}
            
            Please check the workflow logs and fix the broken links.
            
            ### Actions Required
            - [ ] Review the link checker results
            - [ ] Fix or remove broken links
            - [ ] Update documentation if URLs have changed
            - [ ] Close this issue once fixed
            
            This issue was created automatically by the link checker workflow.
                `,
                labels: ['documentation', 'broken-links', 'automated']
              });
            }
            
      - name: Create summary
        if: always()
        run: |
          echo "## 🔗 Link Check Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ All links are working correctly" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Some links are broken" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Check the workflow logs and uploaded artifacts for details." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- **Check external links**: ${{ github.event.inputs.check_external || 'true' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Fail on error**: ${{ github.event.inputs.fail_on_error || 'false' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY